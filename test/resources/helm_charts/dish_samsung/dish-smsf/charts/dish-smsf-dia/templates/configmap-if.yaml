apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Values.configmaps.names.if }}
  selfLink: /api/v1/namespaces/{{ .Release.Namespace }}/configmaps/{{ .Values.configmaps.names.if }}
data:
  {{- $dirpath := printf "configfiles/if/*.yaml" }}
  {{- range $path, $_ := .Files.Glob $dirpath }}
  {{ base $path }}: |-
  {{ $.Files.Get $path | nindent 4 }}
  {{- end }}

  httpif.conf: |-
    modules = [
        "UlibDefaults"
        "ulib.pprof"
        "httpifDefaults"
        "UccmsClientModule"
    ]
    
    logrus {
        format = "text"
        config-file = ${?SMS_DATA_DIR}/httpif_logger.conf
        watch-config = true
    }
    
    httpif {
        SetMaxOpenConns = 200
        maxprocs = 10
    }
    
    http-interface {
        http {
            port = {{ .Values.global.port.dia.container }}
            max-handler = 0
            max-concurrent-streams = 5000
            max-readframesize = 10000000
            idle-timeout = 60
            maxuploadbuffer-per-connection = 700000000
            maxuploadbuffer-per-stram = 700000000
            verbose-logsa = false
        }
        client-connection {
            timeout = 20
            keep-alive = 30
            expire-time = 60
        }
       
        MaxHeaderListSize = 10000000
        StrictMaxConcurrentStreams = false
    }
    
    http-configmgr {
        http {
            port = {{ .Values.global.smsf.serverPort.forConfigMgr.http }}
        }
        use = map
    }
    
    http-tracemgr {
        http {
            port = {{ .Values.global.smsf.serverPort.forTrace.http }}
        }
    }
    
    tcpmgr {
        http {
            port = 8000
        }
        tcp {
            info = "127.0.0.1:8000"
        }
        connCnt = 8
    }
    
  httpif_logger.conf: |-
    loggers {
        root {
            level = {{ .Values.configmaps.httpifLogger.logLevels.root | quote }}
            appender = [
                console
            ]
        }
    
        com.uangel {
            level = {{ .Values.configmaps.httpifLogger.logLevels.com_uangel | quote }}
            additivity = true
            appender = [
                uangel
            ]
        }
    }
    
    appenders {
        console {
            format = "text"
            class = "Console"
            print-caller = true
        }
        uangel {
            format = "text"
            class = "File"
            file = ${?SMSC_HOME}/log/httpif/httpif.log
        }
    }

  server.cnf: |-
    FQDN = usmsf-map-svc.{{ .Release.Namespace }}.svc.{{ .Values.global.dnsName.zone }}
    ORGNAME = UANGEL
    ORGUNIT = CoreTEch
    ALTNAMES = DNS:$FQDN   # , DNS:bar.sepp.uangel.com , DNS:www.sepp.uangel.com
    
    # --- no modifications required below ---
    [ req ]
    #default_bits = 2048
    #default_md = rsa
    prompt = no
    encrypt_key = no
    distinguished_name = dn
    req_extensions = req_ext
    
    [ dn ]
    C  = KO
    ST = KyeongKi
    L  = SeongNam
    O  = $ORGNAME 
    OU = $ORGUNIT 
    CN = $FQDN
    emailAddress = coretech@uangel.com
    	   
    [ req_ext ]
    subjectAltName = $ALTNAMES
